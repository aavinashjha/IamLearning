#include <stdio.h>
#include <stdlib.h>
#include <memory.h>

typedef struct node {
	struct node *left;
	struct node *right;
	int data;
} NODE;

void inorder(NODE *node) {
	if (node == NULL) {
		printf("\n");
		return;
	}
	inorder(node->left);
	printf("%d \t", node->data);
	inorder(node->right);
}

void insert(NODE **root, int data) {
	NODE *node = NULL;
	if (root == NULL) {
		node = (NODE *)malloc(sizeof(NODE));
		memset((void *)node, 0, sizeof(NODE));
		node->data = data;
		root = &node;
		return;
	}

	if (root->data < data) {
		insert(&root->left, data);
	} else {
		insert(&root->right, data);
	}
}

int main() {
	/*
	 *     4
	 *    /
	 *   2 
	 *  / \
	 * 1   3
	 */
	NODE **root = NULL;
	insert(root, 4);
	insert(root, 2);
	insert(root, 1);
	insert(root, 3);

	printTree(*root);
}

